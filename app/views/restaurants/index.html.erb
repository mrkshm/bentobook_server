<%= render "shared/header", title: t('restaurants.index.title') %>
  


<div class="flex flex-col gap-4 container">
  <% if params[:tag].present? %>
    <div class="px-4 py-3 rounded-lg mb-4 bg-primary-100 text-primary-700">
      Showing restaurants tagged with "<%= params[:tag] %>"
    </div>
  <% end %>
  <div class="flex flex-col md:flex-row justify-between gap-4 items-center">
    <div class="hidden md:block">
      <%= link_to t('restaurants.create_restaurant_button'), new_restaurant_path, class: 'inline-flex items-center px-4 py-2 bg-primary-600 text-surface-50 font-medium rounded-lg hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors' %>
    </div>
  </div>

  <%= turbo_frame_tag "restaurants_page" do %>
  <%# Search and sort forms - visible at all times %>
  <%= form_with url: restaurants_path, method: :get, data: { turbo_action: "advance" } do |form| %>
    <div class="mb-0 flex flex-col gap-4 md:flex-row md:items-start md:gap-6">

      <div class="flex items-center gap-4">
        <!-- Filters dropdown -->
        <div data-controller="dropdown-menu" class="relative z-50">
          <button type="button"
                  data-dropdown-menu-target="trigger"
                  data-action="click->dropdown-menu#toggle"
                  aria-haspopup="menu"
                  aria-expanded="false"
                  class="inline-flex items-center px-4 py-2 bg-surface-50 text-surface-700 border border-surface-300 rounded-lg shadow-sm hover:bg-surface-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
            <%= heroicon "adjustments-horizontal", options: { class: "h-5 w-5 mr-2" } %>
            <span><%= t('restaurants.filters.label', default: 'Filters') %></span>
          </button>

          <div data-dropdown-menu-target="popover"
               class="absolute left-0 mt-2 w-48 bg-surface-50 border border-surface-200 rounded-md shadow-lg hidden"
               aria-hidden="true">
            <div role="menu" data-dropdown-menu-target="menu" class="py-1">
              <%= link_to (params[:show_closed] == 'true' ? t('restaurants.filters.hide_closed', default: 'Hide closed') : t('restaurants.filters.show_closed', default: 'Show closed')),
                          restaurants_path(request.query_parameters.merge(show_closed: params[:show_closed] == 'true' ? nil : 'true')),
                          class: 'block px-4 py-2 text-sm text-surface-700 hover:bg-surface-100',
                          data: { turbo_frame: "restaurants-list", turbo_action: "replace" },
                          role: 'menuitem' %>
              <%= link_to t('restaurants.filters.reset', default: 'Reset filters'),
                          restaurants_path,
                          class: 'block px-4 py-2 text-sm text-surface-700 hover:bg-surface-100',
                          data: { turbo_frame: "restaurants-list", turbo_action: "replace" },
                          role: 'menuitem' %>
            </div>
          </div>
        </div>

        <%= render SortFormComponent.new(
          url: restaurants_path,
          sort_options: {
            t('restaurants.sort.name') => 'name',
            t('restaurants.sort.rating') => 'rating',
            t('restaurants.sort.price_level') => 'price_level',
            t('restaurants.sort.distance') => 'distance',
            t('restaurants.sort.created_at') => 'created_at',
            t('restaurants.sort.updated_at') => 'updated_at'
          },
          current_field: @current_field,
          current_direction: @current_direction,
          additional_params: {
            tag: params[:tag],
            search: params[:search],
            latitude: params[:latitude] || params[:lat],
            longitude: params[:longitude] || params[:lng]
          }
        ) %>
      </div>

      <div class="w-full md:w-auto">
        <%= render SearchFormComponent.new(
          url: restaurants_path,
          placeholder: t('restaurants.index.search_placeholder'),
          search_value: params[:search],
          additional_fields: {
            order_by: params[:order_by],
            order_direction: params[:order_direction],
            tag: params[:tag]
          }
        ) %>
      </div>

    </div>
  <% end %>


<%# Add the FAB for mobile %>
<div class="md:hidden fixed bottom-6 right-6 z-50">
  <%= link_to new_restaurant_path, 
      class: "flex items-center justify-center w-14 h-14 rounded-full bg-primary-600 text-surface-50 shadow-lg hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors",
      aria: { label: t('restaurants.create_restaurant_button') } do %>
    <%= heroicon "plus", options: { class: "h-6 w-6" } %>
  <% end %>
</div>

<div class="min-h-screen bg-surface-100">
  <div class="mx-auto max-w-7xl">
    <%# Always render the restaurants list Turbo Frame, even when empty %>
    <%= turbo_frame_tag "restaurants-list", class: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 items-start" do %>
      <% if @restaurants.empty? %>
        <div class="col-span-full text-center py-8">
          <p class="text-surface-600"><%= t('restaurants.index.no_restaurants_found') %></p>
        </div>
      <% else %>
        <% @restaurants.each do |restaurant| %>
          <div class="grid gap-6">
            <%= render(Restaurants::CardComponent.new(restaurant: restaurant)) %>
          </div>
        <% end %>
      <% end %>
    <% end %>

    <%# Infinite scroll trigger - only show if there are more pages %>
    <% if @pagy && @pagy.next %>
      <%= turbo_frame_tag :pagination,
          loading: :lazy,
          src: restaurants_path(
            format: :turbo_stream,
            page: @pagy.next,
            search: params[:search],
            tag: params[:tag],
            field: @current_field,
            direction: @current_direction,
            latitude: params[:latitude] || params[:lat],
            longitude: params[:longitude] || params[:lng],
            per_page: params[:per_page] || 12,
            
          ) do %>
        <div class="mt-8 text-center">
          <div class="inline-flex items-center px-4 py-2 bg-surface-100 text-surface-500 rounded-md">
            <div class="animate-pulse flex space-x-2">
              <div class="h-2 w-2 bg-primary-600 rounded-full"></div>
              <div class="h-2 w-2 bg-primary-600 rounded-full"></div>
              <div class="h-2 w-2 bg-primary-600 rounded-full"></div>
            </div>
            <span class="ml-2 text-sm"><%= t('pagy.loading') %></span>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>
</div>
<% end %>

